set(LIBRESSL_FOUND true)
set(LIBRESSL_VERSION "2.3.5")
get_filename_component(LIBRESSL_ROOT "${CMAKE_CURRENT_LIST_FILE}" PATH)

if(NOT TARGET crypto)
  add_library(crypto STATIC IMPORTED)
  set_target_properties(crypto PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${LIBRESSL_ROOT}/include"
    IMPORTED_LOCATION_DEBUG "${LIBRESSL_ROOT}/lib/debug/crypto.lib"
    IMPORTED_LOCATION_RELEASE "${LIBRESSL_ROOT}/lib/release/crypto.lib"
    IMPORTED_CONFIGURATIONS "DEBUG;RELEASE"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C")
endif()

if(NOT TARGET ssl)
  add_library(ssl STATIC IMPORTED)
  set_target_properties(ssl PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${LIBRESSL_ROOT}/include"
    IMPORTED_LOCATION_DEBUG "${LIBRESSL_ROOT}/lib/debug/ssl.lib"
    IMPORTED_LOCATION_RELEASE "${LIBRESSL_ROOT}/lib/release/ssl.lib"
    IMPORTED_CONFIGURATIONS "DEBUG;RELEASE"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
    INTERFACE_LINK_LIBRARIES "crypto")
endif()

if(NOT TARGET tls)
  add_library(tls STATIC IMPORTED)
  set_target_properties(tls PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${LIBRESSL_ROOT}/include"
    IMPORTED_LOCATION_DEBUG "${LIBRESSL_ROOT}/lib/debug/tls.lib"
    IMPORTED_LOCATION_RELEASE "${LIBRESSL_ROOT}/lib/release/tls.lib"
    IMPORTED_CONFIGURATIONS "DEBUG;RELEASE"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
    INTERFACE_LINK_LIBRARIES "ssl")
endif()
